---
title:  "[방통대] 데이터베이스 수업 정리"
created:   2021-03-20 14:42:24 +0900
updated:   2021-04-15 11:58:15 +0900
author: namu
categories: knou
permalink: "/knou/:year/:month/:day/:title"
image: https://images.unsplash.com/photo-1569235186275-626cb53b83ce?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1952&q=80
alt: database image
image-view: true
image-author: Maksym Kaharlytskyi
image-source: https://unsplash.com/photos/Q9y3LRuuxmg
---


---

### 목차

1. [데이터베이스의 이해](#1-데이터베이스의-이해)
2. [데이터베이스 모델링](#2-데이터베이스-모델링)
3. [관계형 모델](#3-관계형-모델)
4. [SQL 1](#4-sql-1)
5. [SQL 2](#5-sql-2)
6. [SQL 3](#6-sql-3)
7. [](#)
8. [](#)
9. [](#)
10. [](#)
11. [](#)
12. [](#)
13. [](#)
14. [](#)
15. [](#)

---

<br>
## 들어가며

다음은 2021학년도 1학기 데이터베이스 수업에 대한 정리입니다.

<br>
## 1. 데이터베이스의 이해

데이터베이스 시스템이 만들어진 이유는 급격한 사회 트렌드의 변화 속에서 빠르게 증대되는 데이터를 효율적으로 관리할 필요성이 높아졌기 때문입니다.
실제로 데이터 세계의 총량은 2013년 ```4.4 ZB```(제타바이트) 규모였으나 2020년 ```44 ZB``` 규모로 증대될 것이라 예측되었고,
현재는 ```60 ZB``` 분량으로 늘어났다고 합니다.

### 데이터베이스의 역할

데이터베이스 시스템은 이와 같이 많은 데이터를 **저장 및 관리**하고 필요한 데이터를 **신속히 검색**할 수 있도록 보조하는 장치입니다.

**데이터 관리의 역사**
![history of database](https://daesungra.github.io/namu/assets/post-img/history_of_db.png)

전통적 데이터 관리 방식(데이터베이스 시스템 이전)을 살펴보기 위해 **파일 처리 시스템**에 주목해 봅시다.
학적, 성적, 수강 관리 어플리케이션이 각각 존재한다고 했을 때, 파일 처리 시스템에서는 이들의 데이터를 파일의 형태로 따로따로 저장했습니다.
단순히 데이터를 저장하는 수준이었던 이 방식에는 몇 가지 문제점이 존재했는데,
**```데이터 종속의 문제```**(물리적, 논리적 종속), **```데이터 중복의 문제```**(일관성, 보안성, 경제성 저해),
**```무결성 훼손의 문제```**(데이터의 제약조건 불만족, 정확성x), **```동시 접근의 문제```**(일관성 훼손) 들이 그것입니다.

### 데이터베이스의 특징

데이터베이스 시스템의 사용은 **데이터의 사용과 관리 영역을 철저히 분리**하여 파일 처리 시스템의 문제점을 해결하는 데 그 의미가 있습니다.
기본 원리는 데이터베이스 시스템이 중간관리자 역할을 하여 **어플리케이션 혹은 사용자가 직접적으로 데이터에 접근하지 못하도록** 하는 것입니다.
데이터에 접근 가능한 것은 오직 데이터베이스 시스템뿐이며 이 중간관리자를 DBMS(Database Management System)라고 부릅니다.

**데이터베이스 시스템의 구성**
![structure of database system](https://daesungra.github.io/namu/assets/post-img/structure_of_db_system.png)

데이터베이스의 특징은 다음과 같습니다.

**1. 데이터베이스 시스템의 자기 기술성**
- 데이터와 데이터의 정의 및 설명(메타데이터)을 포함
- 값은 그것의 의미가 정의되지 않았기 때문에 데이터라고 할 수 없음
- 이렇게 값에 부여되는 의미나 정의를 메타데이터라고 함
    - ```'12'라는 값은 '오늘', '낮 최고 기온'이라는 설명이 붙을 때 의미를 갖는 데이터가 됩니다.```

**2. 프로그램과 데이터의 격리 및 추상화**
- 사용자에게 데이터에 대한 개념적인 표현을 제공하여 접근성을 향상
- DBMS의 3단계 구조 <small>\> 외부(뷰), 개념, 내부 단계의 스키마 제공</small>
- 각 단계 사이에는 ```개념-내부 사상```, ```외부-개념 사상```이라는 연결점이 존재
- 사용자는 외부 단계를 통해서만 데이터를 볼 수 있음, 꼭 필요한 데이터만 필터되어 뷰로 제공됨
    - ![3 layer of dbms](https://daesungra.github.io/namu/assets/post-img/dbms-3-layer.png)

**3. 다중 뷰 제공**
- 각 사용자가 관심을 갖는 데이터베이스의 일부만을 표현할 수 있는 기능 제공

**4. 데이터 공유와 다수 사용자 트랜잭션 처리**
- 다수의 데이터 조작 요청을 **동시성 제어 기능**을 통해 데이터의 일관성을 보장하면서 동시에 작업을 수행
- Read 후 Write의 과정을 하나의 트랜잭션으로 접근하면, 해당 데이터에 대해 락이 걸림
- 트랜잭션 처리완료 후 다음 접근이 가능함
    - > **트랜잭션**: 하나의 논리적 작업을 처리하기 위한 일련의 데이터베이스 명령의 집합

### 데이터베이스의 구성요소

**데이터베이스 언어**
- DBMS에게 어플리케이션이 수행하는 질의언어(언어 형태의 인터페이스)가 필요함
    - DDL(데이터 정의 언어): 데이터 객체를 생성, 수정, 삭제하기 위한 언어. 데이터 구조화
    - DML(데이터 조작 언어): 구조화된 데이터에 접근 및 조작(검색, 삽입, 삭제, 수정)
- 표준화된 데이터베이스 언어
    - **SQL**(Structured Query Language)
    - 자연어와 유사한 특징이 있음

**데이터베이스 시스템 아키텍쳐**

데이터베이스 시스템이라 함은 단순히 데이터 저장의 측면 뿐만 아니라
클라이언트가 데이터에 어떠한 방식으로 접근 및 처리를 하는지에 대해 전체적으로 설계된 아키텍쳐(구조)를 의미합니다.

- 중앙집중식 방식
    - 단일 서버가 다수의 클라이언트 장치를 대신하여 작동(중앙컴퓨터 + 다수의 터미널)
    - 저렴하고 수월하게 구축 가능하나 중앙 컴퓨터의 과부하로 전체 성능 저하 가능
- 분산 시스템 방식
    - 클라이언트 장치의 성능 향상으로 자체적인 처리 능력 보유(클라이언트가 일정 부분 데이터 처리)
    - **클라이언트-서버(Client-Server) 데이터베이스 시스템**

분산 시스템 방식은 부하를 분산하고 소프트웨어 유지보수 비용 절감 및 이식성 증대의 측면에서 효율적입니다.
또한 분산 시스템은 비즈니스 로직 어플리케이션 서버가 추가적으로 분리되었는지 여부에 따라 2계층 구조와 3계층 구조로 나뉩니다.


<br>
## 2. 데이터베이스 모델링

데이터베이스를 사용하기 위한 계획을 세우는 과정을 모델링이라고 합니다.

### 데이터베이스 모델링의 이해

- 데이터베이스 모델링의 필요
    - 비즈니스적 관점: 어떤 데이터를 저장해야 하는가?
    - 컴퓨터 프로그래머 관점: 어떻게 데이터를 저장해야 하는가?
- 데이터베이스 시스템 구현 과정(데이터의 관점)
    - 사용자 요구사항 분석
    - 개념적 데이터 모델링
    - 논리적 데이터 모델링 > 개념 스키마 생성
    - 물리적 데이터 모델링 > 내부 스키마 생성
    - ![create db system](https://daesungra.github.io/namu/assets/post-img/create_db_system.png)
- 데이터베이스 모델링의 개념
    - 데이터의 의미를 파악하고 데이터와 관여하는 업무 프로세스를 개념적으로 정의하고 분석하는 작업
    - 모델링의 단계
    - ![steps of data modeling](https://daesungra.github.io/namu/assets/post-img/steps_of_data_modeling.png)

**데이터 모델**이란 요구사항에 필요한 데이터를 선별하고 구조화하기 위해 표준적으로 정의된 개념 틀이라고 생각하면 됩니다.
우리가 필요한 데이터는 이렇게 설계된 모델에 맞게 저장 및 사용되죠.

> 데이터 모델: 의미, 데이터 타입, 연산 등을 명시하기 위해 사용할 수 있는 재념들의 집합

**데이터 모델링**이라 함은 실세계의 일부분을 구조화된 데이터 모델의 형태로 나타내는 과정입니다.
데이터 모델링은 아래의 단계에 맞게 진행됩니다.

**1. 개념적 데이터 모델링**
    - 요구사항의 해석 오류를 방지
    - 데이터 구조, 데이터 타입, 속성, 관계, 제약조건 등을 이끌어내는 과정
**2. 논리적 데이터 모델링**
    - 특정 DBMS의 구현 모델에 맞춰 데이터를 표현하는 과정
    - 데이터 정의 언어(DDL)로 기술된 개념 스키마 생성
**3. 물리적 데이터 모델링**
    - 데이터베이스 파일의 내부 저장구조, 파일 구성, 인덱스, 접근 경로 등을 결정하는 과정


### 사용자 요구사항 분석

### ER 모델

<br>
## 3. 관계형 모델

<br>
## 4. SQL 1

<br>
## 5. SQL 2

<br>
## 6. SQL 3
